// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FirewallGroup extends pulumi.CustomResource {
    /**
     * Get an existing FirewallGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallGroupState, opts?: pulumi.CustomResourceOptions): FirewallGroup {
        return new FirewallGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'unifi:index/firewallGroup:FirewallGroup';

    /**
     * Returns true if the given object is an instance of FirewallGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallGroup.__pulumiType;
    }

    /**
     * The members of the firewall group.
     */
    declare public readonly members: pulumi.Output<string[]>;
    /**
     * The name of the firewall group.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The name of the site to associate the firewall group with.
     */
    declare public readonly site: pulumi.Output<string>;
    /**
     * The type of the firewall group. Must be one of: `address-group`, `port-group`, or `ipv6-address-group`.
     */
    declare public readonly type: pulumi.Output<string>;

    /**
     * Create a FirewallGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirewallGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallGroupArgs | FirewallGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallGroupState | undefined;
            resourceInputs["members"] = state?.members;
            resourceInputs["name"] = state?.name;
            resourceInputs["site"] = state?.site;
            resourceInputs["type"] = state?.type;
        } else {
            const args = argsOrState as FirewallGroupArgs | undefined;
            if (args?.members === undefined && !opts.urn) {
                throw new Error("Missing required property 'members'");
            }
            if (args?.type === undefined && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["members"] = args?.members;
            resourceInputs["name"] = args?.name;
            resourceInputs["site"] = args?.site;
            resourceInputs["type"] = args?.type;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirewallGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FirewallGroup resources.
 */
export interface FirewallGroupState {
    /**
     * The members of the firewall group.
     */
    members?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the firewall group.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the site to associate the firewall group with.
     */
    site?: pulumi.Input<string>;
    /**
     * The type of the firewall group. Must be one of: `address-group`, `port-group`, or `ipv6-address-group`.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallGroup resource.
 */
export interface FirewallGroupArgs {
    /**
     * The members of the firewall group.
     */
    members: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the firewall group.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the site to associate the firewall group with.
     */
    site?: pulumi.Input<string>;
    /**
     * The type of the firewall group. Must be one of: `address-group`, `port-group`, or `ipv6-address-group`.
     */
    type: pulumi.Input<string>;
}
