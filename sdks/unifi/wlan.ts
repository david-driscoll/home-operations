// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Wlan extends pulumi.CustomResource {
    /**
     * Get an existing Wlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WlanState, opts?: pulumi.CustomResourceOptions): Wlan {
        return new Wlan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'unifi:index/wlan:Wlan';

    /**
     * Returns true if the given object is an instance of Wlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Wlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Wlan.__pulumiType;
    }

    /**
     * IDs of the AP groups that should broadcast this SSID. Used to control which access points broadcast this network.
     */
    declare public readonly apGroupIds: pulumi.Output<string[] | undefined>;
    /**
     * Enable BSS Transition Management to help clients roam between APs more efficiently. Defaults to `true`.
     */
    declare public readonly bssTransition: pulumi.Output<boolean | undefined>;
    /**
     * Enable 802.11r Fast BSS Transition for seamless roaming between APs. Requires client device support. Defaults to `false`.
     */
    declare public readonly fastRoamingEnabled: pulumi.Output<boolean | undefined>;
    /**
     * When enabled, the access points will not broadcast the network name (SSID). Clients will need to manually enter the SSID to connect.
     */
    declare public readonly hideSsid: pulumi.Output<boolean | undefined>;
    /**
     * Mark this as a guest network. Guest networks are isolated from other networks and can have special restrictions like captive portals.
     */
    declare public readonly isGuest: pulumi.Output<boolean | undefined>;
    /**
     * Isolates wireless clients from each other at layer 2 (ethernet) level. When enabled, devices on this WLAN cannot communicate directly with each other, improving security especially for guest networks or IoT devices. Each client can only communicate with the gateway/router. Defaults to `false`.
     */
    declare public readonly l2Isolation: pulumi.Output<boolean | undefined>;
    /**
     * Enable MAC address filtering to control network access based on client MAC addresses. Works in conjunction with `mac_filter_list` and `mac_filter_policy`.
     */
    declare public readonly macFilterEnabled: pulumi.Output<boolean | undefined>;
    /**
     * List of MAC addresses to filter in XX:XX:XX:XX:XX:XX format. Only applied when `mac_filter_enabled` is true. MAC addresses are case-insensitive.
     */
    declare public readonly macFilterLists: pulumi.Output<string[] | undefined>;
    /**
     * MAC address filter policy. Valid values are:
     *   * `allow` - Only allow listed MAC addresses
     *   * `deny` - Block listed MAC addresses Defaults to `deny`.
     */
    declare public readonly macFilterPolicy: pulumi.Output<string | undefined>;
    /**
     * Minimum data rate for 2.4GHz devices in Kbps. Use `0` to disable. Valid values: `1000`, `2000`, `5500`, `6000`, `9000`, `11000`, `12000`, `18000`, `24000`, `36000`, `48000`,  and `54000`
     */
    declare public readonly minimumDataRate2gKbps: pulumi.Output<number | undefined>;
    /**
     * Minimum data rate for 5GHz devices in Kbps. Use `0` to disable. Valid values: `6000`, `9000`, `12000`, `18000`, `24000`, `36000`, `48000`,  and `54000`
     */
    declare public readonly minimumDataRate5gKbps: pulumi.Output<number | undefined>;
    /**
     * Enable multicast enhancement to convert multicast traffic to unicast for better reliability and performance, especially for applications like video streaming.
     */
    declare public readonly multicastEnhance: pulumi.Output<boolean | undefined>;
    /**
     * The SSID (network name) that will be broadcast by the access points. Must be between 1 and 32 characters long.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * ID of the network (VLAN) for this SSID. Used to assign the WLAN to a specific network segment.
     */
    declare public readonly networkId: pulumi.Output<string | undefined>;
    /**
     * When enabled, devices from specific manufacturers (identified by their OUI - Organizationally Unique Identifier) will be prevented from connecting on 2.4GHz and forced to use 5GHz. This improves overall network performance by ensuring capable devices use the less congested 5GHz band. Common examples include newer smartphones and laptops. Defaults to `true`.
     */
    declare public readonly no2ghzOui: pulumi.Output<boolean | undefined>;
    /**
     * The WPA pre-shared key (password) for the network. Required when security is not set to `open`.
     */
    declare public readonly passphrase: pulumi.Output<string | undefined>;
    /**
     * Protected Management Frames (PMF) mode. It cannot be disabled if using WPA3. Valid values are:
     *   * `required` - All clients must support PMF (required for WPA3)
     *   * `optional` - Clients can optionally use PMF (recommended when transitioning from WPA2 to WPA3)
     *   * `disabled` - PMF is disabled (not compatible with WPA3) Defaults to `disabled`.
     */
    declare public readonly pmfMode: pulumi.Output<string | undefined>;
    /**
     * Enable ARP proxy on this WLAN. When enabled, the UniFi controller will respond to ARP requests on behalf of clients, reducing broadcast traffic and potentially improving network performance. This is particularly useful in high-density wireless environments. Defaults to `false`.
     */
    declare public readonly proxyArp: pulumi.Output<boolean | undefined>;
    /**
     * ID of the RADIUS profile to use for WPA Enterprise authentication (when security is 'wpaeap'). Reference existing profiles using the `unifi.RadiusProfile` data source.
     */
    declare public readonly radiusProfileId: pulumi.Output<string | undefined>;
    /**
     * Time-based access control configuration for the wireless network. Allows automatic enabling/disabling of the network on specified schedules.
     */
    declare public readonly schedules: pulumi.Output<outputs.WlanSchedule[] | undefined>;
    /**
     * The security protocol for the wireless network. Valid values are:
     *   * `wpapsk` - WPA Personal (PSK) with WPA2/WPA3 options
     *   * `wpaeap` - WPA Enterprise (802.1x)
     *   * `open` - Open network (no encryption)
     */
    declare public readonly security: pulumi.Output<string>;
    /**
     * The name of the UniFi site where the wireless network should be created. If not specified, the default site will be used.
     */
    declare public readonly site: pulumi.Output<string>;
    /**
     * Enable Unscheduled Automatic Power Save Delivery to improve battery life for mobile devices. Defaults to `false`.
     */
    declare public readonly uapsd: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the user group that defines the rate limiting and firewall rules for clients on this network.
     */
    declare public readonly userGroupId: pulumi.Output<string>;
    /**
     * Radio band selection. Valid values:
     *   * `both` - Both 2.4GHz and 5GHz (default)
     *   * `2g` - 2.4GHz only
     *   * `5g` - 5GHz only Defaults to `both`.
     */
    declare public readonly wlanBand: pulumi.Output<string | undefined>;
    /**
     * Enable WPA3 security protocol. Requires security to be set to `wpapsk` and PMF mode to be enabled. WPA3 provides enhanced security features over WPA2.
     */
    declare public readonly wpa3Support: pulumi.Output<boolean | undefined>;
    /**
     * Enable WPA3 transition mode, which allows both WPA2 and WPA3 clients to connect. This provides backward compatibility while gradually transitioning to WPA3. Requires security to be set to `wpapsk` and `wpa3_support` to be true.
     */
    declare public readonly wpa3Transition: pulumi.Output<boolean | undefined>;

    /**
     * Create a Wlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WlanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WlanArgs | WlanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WlanState | undefined;
            resourceInputs["apGroupIds"] = state?.apGroupIds;
            resourceInputs["bssTransition"] = state?.bssTransition;
            resourceInputs["fastRoamingEnabled"] = state?.fastRoamingEnabled;
            resourceInputs["hideSsid"] = state?.hideSsid;
            resourceInputs["isGuest"] = state?.isGuest;
            resourceInputs["l2Isolation"] = state?.l2Isolation;
            resourceInputs["macFilterEnabled"] = state?.macFilterEnabled;
            resourceInputs["macFilterLists"] = state?.macFilterLists;
            resourceInputs["macFilterPolicy"] = state?.macFilterPolicy;
            resourceInputs["minimumDataRate2gKbps"] = state?.minimumDataRate2gKbps;
            resourceInputs["minimumDataRate5gKbps"] = state?.minimumDataRate5gKbps;
            resourceInputs["multicastEnhance"] = state?.multicastEnhance;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkId"] = state?.networkId;
            resourceInputs["no2ghzOui"] = state?.no2ghzOui;
            resourceInputs["passphrase"] = state?.passphrase;
            resourceInputs["pmfMode"] = state?.pmfMode;
            resourceInputs["proxyArp"] = state?.proxyArp;
            resourceInputs["radiusProfileId"] = state?.radiusProfileId;
            resourceInputs["schedules"] = state?.schedules;
            resourceInputs["security"] = state?.security;
            resourceInputs["site"] = state?.site;
            resourceInputs["uapsd"] = state?.uapsd;
            resourceInputs["userGroupId"] = state?.userGroupId;
            resourceInputs["wlanBand"] = state?.wlanBand;
            resourceInputs["wpa3Support"] = state?.wpa3Support;
            resourceInputs["wpa3Transition"] = state?.wpa3Transition;
        } else {
            const args = argsOrState as WlanArgs | undefined;
            if (args?.security === undefined && !opts.urn) {
                throw new Error("Missing required property 'security'");
            }
            if (args?.userGroupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'userGroupId'");
            }
            resourceInputs["apGroupIds"] = args?.apGroupIds;
            resourceInputs["bssTransition"] = args?.bssTransition;
            resourceInputs["fastRoamingEnabled"] = args?.fastRoamingEnabled;
            resourceInputs["hideSsid"] = args?.hideSsid;
            resourceInputs["isGuest"] = args?.isGuest;
            resourceInputs["l2Isolation"] = args?.l2Isolation;
            resourceInputs["macFilterEnabled"] = args?.macFilterEnabled;
            resourceInputs["macFilterLists"] = args?.macFilterLists;
            resourceInputs["macFilterPolicy"] = args?.macFilterPolicy;
            resourceInputs["minimumDataRate2gKbps"] = args?.minimumDataRate2gKbps;
            resourceInputs["minimumDataRate5gKbps"] = args?.minimumDataRate5gKbps;
            resourceInputs["multicastEnhance"] = args?.multicastEnhance;
            resourceInputs["name"] = args?.name;
            resourceInputs["networkId"] = args?.networkId;
            resourceInputs["no2ghzOui"] = args?.no2ghzOui;
            resourceInputs["passphrase"] = args?.passphrase ? pulumi.secret(args.passphrase) : undefined;
            resourceInputs["pmfMode"] = args?.pmfMode;
            resourceInputs["proxyArp"] = args?.proxyArp;
            resourceInputs["radiusProfileId"] = args?.radiusProfileId;
            resourceInputs["schedules"] = args?.schedules;
            resourceInputs["security"] = args?.security;
            resourceInputs["site"] = args?.site;
            resourceInputs["uapsd"] = args?.uapsd;
            resourceInputs["userGroupId"] = args?.userGroupId;
            resourceInputs["wlanBand"] = args?.wlanBand;
            resourceInputs["wpa3Support"] = args?.wpa3Support;
            resourceInputs["wpa3Transition"] = args?.wpa3Transition;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["passphrase"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Wlan.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Wlan resources.
 */
export interface WlanState {
    /**
     * IDs of the AP groups that should broadcast this SSID. Used to control which access points broadcast this network.
     */
    apGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable BSS Transition Management to help clients roam between APs more efficiently. Defaults to `true`.
     */
    bssTransition?: pulumi.Input<boolean>;
    /**
     * Enable 802.11r Fast BSS Transition for seamless roaming between APs. Requires client device support. Defaults to `false`.
     */
    fastRoamingEnabled?: pulumi.Input<boolean>;
    /**
     * When enabled, the access points will not broadcast the network name (SSID). Clients will need to manually enter the SSID to connect.
     */
    hideSsid?: pulumi.Input<boolean>;
    /**
     * Mark this as a guest network. Guest networks are isolated from other networks and can have special restrictions like captive portals.
     */
    isGuest?: pulumi.Input<boolean>;
    /**
     * Isolates wireless clients from each other at layer 2 (ethernet) level. When enabled, devices on this WLAN cannot communicate directly with each other, improving security especially for guest networks or IoT devices. Each client can only communicate with the gateway/router. Defaults to `false`.
     */
    l2Isolation?: pulumi.Input<boolean>;
    /**
     * Enable MAC address filtering to control network access based on client MAC addresses. Works in conjunction with `mac_filter_list` and `mac_filter_policy`.
     */
    macFilterEnabled?: pulumi.Input<boolean>;
    /**
     * List of MAC addresses to filter in XX:XX:XX:XX:XX:XX format. Only applied when `mac_filter_enabled` is true. MAC addresses are case-insensitive.
     */
    macFilterLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * MAC address filter policy. Valid values are:
     *   * `allow` - Only allow listed MAC addresses
     *   * `deny` - Block listed MAC addresses Defaults to `deny`.
     */
    macFilterPolicy?: pulumi.Input<string>;
    /**
     * Minimum data rate for 2.4GHz devices in Kbps. Use `0` to disable. Valid values: `1000`, `2000`, `5500`, `6000`, `9000`, `11000`, `12000`, `18000`, `24000`, `36000`, `48000`,  and `54000`
     */
    minimumDataRate2gKbps?: pulumi.Input<number>;
    /**
     * Minimum data rate for 5GHz devices in Kbps. Use `0` to disable. Valid values: `6000`, `9000`, `12000`, `18000`, `24000`, `36000`, `48000`,  and `54000`
     */
    minimumDataRate5gKbps?: pulumi.Input<number>;
    /**
     * Enable multicast enhancement to convert multicast traffic to unicast for better reliability and performance, especially for applications like video streaming.
     */
    multicastEnhance?: pulumi.Input<boolean>;
    /**
     * The SSID (network name) that will be broadcast by the access points. Must be between 1 and 32 characters long.
     */
    name?: pulumi.Input<string>;
    /**
     * ID of the network (VLAN) for this SSID. Used to assign the WLAN to a specific network segment.
     */
    networkId?: pulumi.Input<string>;
    /**
     * When enabled, devices from specific manufacturers (identified by their OUI - Organizationally Unique Identifier) will be prevented from connecting on 2.4GHz and forced to use 5GHz. This improves overall network performance by ensuring capable devices use the less congested 5GHz band. Common examples include newer smartphones and laptops. Defaults to `true`.
     */
    no2ghzOui?: pulumi.Input<boolean>;
    /**
     * The WPA pre-shared key (password) for the network. Required when security is not set to `open`.
     */
    passphrase?: pulumi.Input<string>;
    /**
     * Protected Management Frames (PMF) mode. It cannot be disabled if using WPA3. Valid values are:
     *   * `required` - All clients must support PMF (required for WPA3)
     *   * `optional` - Clients can optionally use PMF (recommended when transitioning from WPA2 to WPA3)
     *   * `disabled` - PMF is disabled (not compatible with WPA3) Defaults to `disabled`.
     */
    pmfMode?: pulumi.Input<string>;
    /**
     * Enable ARP proxy on this WLAN. When enabled, the UniFi controller will respond to ARP requests on behalf of clients, reducing broadcast traffic and potentially improving network performance. This is particularly useful in high-density wireless environments. Defaults to `false`.
     */
    proxyArp?: pulumi.Input<boolean>;
    /**
     * ID of the RADIUS profile to use for WPA Enterprise authentication (when security is 'wpaeap'). Reference existing profiles using the `unifi.RadiusProfile` data source.
     */
    radiusProfileId?: pulumi.Input<string>;
    /**
     * Time-based access control configuration for the wireless network. Allows automatic enabling/disabling of the network on specified schedules.
     */
    schedules?: pulumi.Input<pulumi.Input<inputs.WlanSchedule>[]>;
    /**
     * The security protocol for the wireless network. Valid values are:
     *   * `wpapsk` - WPA Personal (PSK) with WPA2/WPA3 options
     *   * `wpaeap` - WPA Enterprise (802.1x)
     *   * `open` - Open network (no encryption)
     */
    security?: pulumi.Input<string>;
    /**
     * The name of the UniFi site where the wireless network should be created. If not specified, the default site will be used.
     */
    site?: pulumi.Input<string>;
    /**
     * Enable Unscheduled Automatic Power Save Delivery to improve battery life for mobile devices. Defaults to `false`.
     */
    uapsd?: pulumi.Input<boolean>;
    /**
     * The ID of the user group that defines the rate limiting and firewall rules for clients on this network.
     */
    userGroupId?: pulumi.Input<string>;
    /**
     * Radio band selection. Valid values:
     *   * `both` - Both 2.4GHz and 5GHz (default)
     *   * `2g` - 2.4GHz only
     *   * `5g` - 5GHz only Defaults to `both`.
     */
    wlanBand?: pulumi.Input<string>;
    /**
     * Enable WPA3 security protocol. Requires security to be set to `wpapsk` and PMF mode to be enabled. WPA3 provides enhanced security features over WPA2.
     */
    wpa3Support?: pulumi.Input<boolean>;
    /**
     * Enable WPA3 transition mode, which allows both WPA2 and WPA3 clients to connect. This provides backward compatibility while gradually transitioning to WPA3. Requires security to be set to `wpapsk` and `wpa3_support` to be true.
     */
    wpa3Transition?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Wlan resource.
 */
export interface WlanArgs {
    /**
     * IDs of the AP groups that should broadcast this SSID. Used to control which access points broadcast this network.
     */
    apGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable BSS Transition Management to help clients roam between APs more efficiently. Defaults to `true`.
     */
    bssTransition?: pulumi.Input<boolean>;
    /**
     * Enable 802.11r Fast BSS Transition for seamless roaming between APs. Requires client device support. Defaults to `false`.
     */
    fastRoamingEnabled?: pulumi.Input<boolean>;
    /**
     * When enabled, the access points will not broadcast the network name (SSID). Clients will need to manually enter the SSID to connect.
     */
    hideSsid?: pulumi.Input<boolean>;
    /**
     * Mark this as a guest network. Guest networks are isolated from other networks and can have special restrictions like captive portals.
     */
    isGuest?: pulumi.Input<boolean>;
    /**
     * Isolates wireless clients from each other at layer 2 (ethernet) level. When enabled, devices on this WLAN cannot communicate directly with each other, improving security especially for guest networks or IoT devices. Each client can only communicate with the gateway/router. Defaults to `false`.
     */
    l2Isolation?: pulumi.Input<boolean>;
    /**
     * Enable MAC address filtering to control network access based on client MAC addresses. Works in conjunction with `mac_filter_list` and `mac_filter_policy`.
     */
    macFilterEnabled?: pulumi.Input<boolean>;
    /**
     * List of MAC addresses to filter in XX:XX:XX:XX:XX:XX format. Only applied when `mac_filter_enabled` is true. MAC addresses are case-insensitive.
     */
    macFilterLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * MAC address filter policy. Valid values are:
     *   * `allow` - Only allow listed MAC addresses
     *   * `deny` - Block listed MAC addresses Defaults to `deny`.
     */
    macFilterPolicy?: pulumi.Input<string>;
    /**
     * Minimum data rate for 2.4GHz devices in Kbps. Use `0` to disable. Valid values: `1000`, `2000`, `5500`, `6000`, `9000`, `11000`, `12000`, `18000`, `24000`, `36000`, `48000`,  and `54000`
     */
    minimumDataRate2gKbps?: pulumi.Input<number>;
    /**
     * Minimum data rate for 5GHz devices in Kbps. Use `0` to disable. Valid values: `6000`, `9000`, `12000`, `18000`, `24000`, `36000`, `48000`,  and `54000`
     */
    minimumDataRate5gKbps?: pulumi.Input<number>;
    /**
     * Enable multicast enhancement to convert multicast traffic to unicast for better reliability and performance, especially for applications like video streaming.
     */
    multicastEnhance?: pulumi.Input<boolean>;
    /**
     * The SSID (network name) that will be broadcast by the access points. Must be between 1 and 32 characters long.
     */
    name?: pulumi.Input<string>;
    /**
     * ID of the network (VLAN) for this SSID. Used to assign the WLAN to a specific network segment.
     */
    networkId?: pulumi.Input<string>;
    /**
     * When enabled, devices from specific manufacturers (identified by their OUI - Organizationally Unique Identifier) will be prevented from connecting on 2.4GHz and forced to use 5GHz. This improves overall network performance by ensuring capable devices use the less congested 5GHz band. Common examples include newer smartphones and laptops. Defaults to `true`.
     */
    no2ghzOui?: pulumi.Input<boolean>;
    /**
     * The WPA pre-shared key (password) for the network. Required when security is not set to `open`.
     */
    passphrase?: pulumi.Input<string>;
    /**
     * Protected Management Frames (PMF) mode. It cannot be disabled if using WPA3. Valid values are:
     *   * `required` - All clients must support PMF (required for WPA3)
     *   * `optional` - Clients can optionally use PMF (recommended when transitioning from WPA2 to WPA3)
     *   * `disabled` - PMF is disabled (not compatible with WPA3) Defaults to `disabled`.
     */
    pmfMode?: pulumi.Input<string>;
    /**
     * Enable ARP proxy on this WLAN. When enabled, the UniFi controller will respond to ARP requests on behalf of clients, reducing broadcast traffic and potentially improving network performance. This is particularly useful in high-density wireless environments. Defaults to `false`.
     */
    proxyArp?: pulumi.Input<boolean>;
    /**
     * ID of the RADIUS profile to use for WPA Enterprise authentication (when security is 'wpaeap'). Reference existing profiles using the `unifi.RadiusProfile` data source.
     */
    radiusProfileId?: pulumi.Input<string>;
    /**
     * Time-based access control configuration for the wireless network. Allows automatic enabling/disabling of the network on specified schedules.
     */
    schedules?: pulumi.Input<pulumi.Input<inputs.WlanSchedule>[]>;
    /**
     * The security protocol for the wireless network. Valid values are:
     *   * `wpapsk` - WPA Personal (PSK) with WPA2/WPA3 options
     *   * `wpaeap` - WPA Enterprise (802.1x)
     *   * `open` - Open network (no encryption)
     */
    security: pulumi.Input<string>;
    /**
     * The name of the UniFi site where the wireless network should be created. If not specified, the default site will be used.
     */
    site?: pulumi.Input<string>;
    /**
     * Enable Unscheduled Automatic Power Save Delivery to improve battery life for mobile devices. Defaults to `false`.
     */
    uapsd?: pulumi.Input<boolean>;
    /**
     * The ID of the user group that defines the rate limiting and firewall rules for clients on this network.
     */
    userGroupId: pulumi.Input<string>;
    /**
     * Radio band selection. Valid values:
     *   * `both` - Both 2.4GHz and 5GHz (default)
     *   * `2g` - 2.4GHz only
     *   * `5g` - 5GHz only Defaults to `both`.
     */
    wlanBand?: pulumi.Input<string>;
    /**
     * Enable WPA3 security protocol. Requires security to be set to `wpapsk` and PMF mode to be enabled. WPA3 provides enhanced security features over WPA2.
     */
    wpa3Support?: pulumi.Input<boolean>;
    /**
     * Enable WPA3 transition mode, which allows both WPA2 and WPA3 clients to connect. This provides backward compatibility while gradually transitioning to WPA3. Requires security to be set to `wpapsk` and `wpa3_support` to be true.
     */
    wpa3Transition?: pulumi.Input<boolean>;
}
