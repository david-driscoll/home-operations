"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SettingIps = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class SettingIps extends pulumi.CustomResource {
    /**
     * Get an existing SettingIps resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SettingIps(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of SettingIps.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SettingIps.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["adBlockedNetworks"] = state?.adBlockedNetworks;
            resourceInputs["advancedFilteringPreference"] = state?.advancedFilteringPreference;
            resourceInputs["dnsFilters"] = state?.dnsFilters;
            resourceInputs["enabledCategories"] = state?.enabledCategories;
            resourceInputs["enabledNetworks"] = state?.enabledNetworks;
            resourceInputs["honeypots"] = state?.honeypots;
            resourceInputs["ipsMode"] = state?.ipsMode;
            resourceInputs["memoryOptimized"] = state?.memoryOptimized;
            resourceInputs["restrictTorrents"] = state?.restrictTorrents;
            resourceInputs["site"] = state?.site;
            resourceInputs["suppression"] = state?.suppression;
        }
        else {
            const args = argsOrState;
            resourceInputs["adBlockedNetworks"] = args?.adBlockedNetworks;
            resourceInputs["advancedFilteringPreference"] = args?.advancedFilteringPreference;
            resourceInputs["dnsFilters"] = args?.dnsFilters;
            resourceInputs["enabledCategories"] = args?.enabledCategories;
            resourceInputs["enabledNetworks"] = args?.enabledNetworks;
            resourceInputs["honeypots"] = args?.honeypots;
            resourceInputs["ipsMode"] = args?.ipsMode;
            resourceInputs["memoryOptimized"] = args?.memoryOptimized;
            resourceInputs["restrictTorrents"] = args?.restrictTorrents;
            resourceInputs["site"] = args?.site;
            resourceInputs["suppression"] = args?.suppression;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SettingIps.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.SettingIps = SettingIps;
/** @internal */
SettingIps.__pulumiType = 'unifi:index/settingIps:SettingIps';
//# sourceMappingURL=settingIps.js.map