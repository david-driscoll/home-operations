"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SettingGuestAccess = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class SettingGuestAccess extends pulumi.CustomResource {
    /**
     * Get an existing SettingGuestAccess resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SettingGuestAccess(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of SettingGuestAccess.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SettingGuestAccess.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["allowedSubnet"] = state?.allowedSubnet;
            resourceInputs["auth"] = state?.auth;
            resourceInputs["authUrl"] = state?.authUrl;
            resourceInputs["authorize"] = state?.authorize;
            resourceInputs["customIp"] = state?.customIp;
            resourceInputs["ecEnabled"] = state?.ecEnabled;
            resourceInputs["expire"] = state?.expire;
            resourceInputs["expireNumber"] = state?.expireNumber;
            resourceInputs["expireUnit"] = state?.expireUnit;
            resourceInputs["facebook"] = state?.facebook;
            resourceInputs["facebookEnabled"] = state?.facebookEnabled;
            resourceInputs["facebookWifi"] = state?.facebookWifi;
            resourceInputs["google"] = state?.google;
            resourceInputs["googleEnabled"] = state?.googleEnabled;
            resourceInputs["ippay"] = state?.ippay;
            resourceInputs["merchantWarrior"] = state?.merchantWarrior;
            resourceInputs["password"] = state?.password;
            resourceInputs["passwordEnabled"] = state?.passwordEnabled;
            resourceInputs["paymentEnabled"] = state?.paymentEnabled;
            resourceInputs["paymentGateway"] = state?.paymentGateway;
            resourceInputs["paypal"] = state?.paypal;
            resourceInputs["portalCustomization"] = state?.portalCustomization;
            resourceInputs["portalEnabled"] = state?.portalEnabled;
            resourceInputs["portalHostname"] = state?.portalHostname;
            resourceInputs["portalUseHostname"] = state?.portalUseHostname;
            resourceInputs["quickpay"] = state?.quickpay;
            resourceInputs["radius"] = state?.radius;
            resourceInputs["radiusEnabled"] = state?.radiusEnabled;
            resourceInputs["redirect"] = state?.redirect;
            resourceInputs["redirectEnabled"] = state?.redirectEnabled;
            resourceInputs["restrictedDnsEnabled"] = state?.restrictedDnsEnabled;
            resourceInputs["restrictedDnsServers"] = state?.restrictedDnsServers;
            resourceInputs["restrictedSubnet"] = state?.restrictedSubnet;
            resourceInputs["site"] = state?.site;
            resourceInputs["stripe"] = state?.stripe;
            resourceInputs["templateEngine"] = state?.templateEngine;
            resourceInputs["voucherCustomized"] = state?.voucherCustomized;
            resourceInputs["voucherEnabled"] = state?.voucherEnabled;
            resourceInputs["wechat"] = state?.wechat;
            resourceInputs["wechatEnabled"] = state?.wechatEnabled;
        }
        else {
            const args = argsOrState;
            resourceInputs["allowedSubnet"] = args?.allowedSubnet;
            resourceInputs["auth"] = args?.auth;
            resourceInputs["authUrl"] = args?.authUrl;
            resourceInputs["authorize"] = args?.authorize;
            resourceInputs["customIp"] = args?.customIp;
            resourceInputs["ecEnabled"] = args?.ecEnabled;
            resourceInputs["expire"] = args?.expire;
            resourceInputs["expireNumber"] = args?.expireNumber;
            resourceInputs["expireUnit"] = args?.expireUnit;
            resourceInputs["facebook"] = args?.facebook;
            resourceInputs["facebookWifi"] = args?.facebookWifi;
            resourceInputs["google"] = args?.google;
            resourceInputs["ippay"] = args?.ippay;
            resourceInputs["merchantWarrior"] = args?.merchantWarrior;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["paymentGateway"] = args?.paymentGateway;
            resourceInputs["paypal"] = args?.paypal;
            resourceInputs["portalCustomization"] = args?.portalCustomization;
            resourceInputs["portalEnabled"] = args?.portalEnabled;
            resourceInputs["portalHostname"] = args?.portalHostname;
            resourceInputs["portalUseHostname"] = args?.portalUseHostname;
            resourceInputs["quickpay"] = args?.quickpay;
            resourceInputs["radius"] = args?.radius;
            resourceInputs["redirect"] = args?.redirect;
            resourceInputs["restrictedDnsServers"] = args?.restrictedDnsServers;
            resourceInputs["restrictedSubnet"] = args?.restrictedSubnet;
            resourceInputs["site"] = args?.site;
            resourceInputs["stripe"] = args?.stripe;
            resourceInputs["templateEngine"] = args?.templateEngine;
            resourceInputs["voucherCustomized"] = args?.voucherCustomized;
            resourceInputs["voucherEnabled"] = args?.voucherEnabled;
            resourceInputs["wechat"] = args?.wechat;
            resourceInputs["facebookEnabled"] = undefined /*out*/;
            resourceInputs["googleEnabled"] = undefined /*out*/;
            resourceInputs["passwordEnabled"] = undefined /*out*/;
            resourceInputs["paymentEnabled"] = undefined /*out*/;
            resourceInputs["radiusEnabled"] = undefined /*out*/;
            resourceInputs["redirectEnabled"] = undefined /*out*/;
            resourceInputs["restrictedDnsEnabled"] = undefined /*out*/;
            resourceInputs["wechatEnabled"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SettingGuestAccess.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.SettingGuestAccess = SettingGuestAccess;
/** @internal */
SettingGuestAccess.__pulumiType = 'unifi:index/settingGuestAccess:SettingGuestAccess';
//# sourceMappingURL=settingGuestAccess.js.map