"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.StageAuthenticatorEmail = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class StageAuthenticatorEmail extends pulumi.CustomResource {
    /**
     * Get an existing StageAuthenticatorEmail resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new StageAuthenticatorEmail(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of StageAuthenticatorEmail.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StageAuthenticatorEmail.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["configureFlow"] = state?.configureFlow;
            resourceInputs["friendlyName"] = state?.friendlyName;
            resourceInputs["fromAddress"] = state?.fromAddress;
            resourceInputs["host"] = state?.host;
            resourceInputs["name"] = state?.name;
            resourceInputs["password"] = state?.password;
            resourceInputs["port"] = state?.port;
            resourceInputs["stageAuthenticatorEmailId"] = state?.stageAuthenticatorEmailId;
            resourceInputs["subject"] = state?.subject;
            resourceInputs["template"] = state?.template;
            resourceInputs["timeout"] = state?.timeout;
            resourceInputs["tokenExpiry"] = state?.tokenExpiry;
            resourceInputs["useGlobalSettings"] = state?.useGlobalSettings;
            resourceInputs["useSsl"] = state?.useSsl;
            resourceInputs["useTls"] = state?.useTls;
            resourceInputs["username"] = state?.username;
        }
        else {
            const args = argsOrState;
            resourceInputs["configureFlow"] = args?.configureFlow;
            resourceInputs["friendlyName"] = args?.friendlyName;
            resourceInputs["fromAddress"] = args?.fromAddress;
            resourceInputs["host"] = args?.host;
            resourceInputs["name"] = args?.name;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["port"] = args?.port;
            resourceInputs["stageAuthenticatorEmailId"] = args?.stageAuthenticatorEmailId;
            resourceInputs["subject"] = args?.subject;
            resourceInputs["template"] = args?.template;
            resourceInputs["timeout"] = args?.timeout;
            resourceInputs["tokenExpiry"] = args?.tokenExpiry;
            resourceInputs["useGlobalSettings"] = args?.useGlobalSettings;
            resourceInputs["useSsl"] = args?.useSsl;
            resourceInputs["useTls"] = args?.useTls;
            resourceInputs["username"] = args?.username;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(StageAuthenticatorEmail.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.StageAuthenticatorEmail = StageAuthenticatorEmail;
/** @internal */
StageAuthenticatorEmail.__pulumiType = 'authentik:index/stageAuthenticatorEmail:StageAuthenticatorEmail';
//# sourceMappingURL=stageAuthenticatorEmail.js.map