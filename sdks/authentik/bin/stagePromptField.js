"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.StagePromptField = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class StagePromptField extends pulumi.CustomResource {
    /**
     * Get an existing StagePromptField resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new StagePromptField(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of StagePromptField.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StagePromptField.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["fieldKey"] = state?.fieldKey;
            resourceInputs["initialValue"] = state?.initialValue;
            resourceInputs["initialValueExpression"] = state?.initialValueExpression;
            resourceInputs["label"] = state?.label;
            resourceInputs["name"] = state?.name;
            resourceInputs["order"] = state?.order;
            resourceInputs["placeholder"] = state?.placeholder;
            resourceInputs["placeholderExpression"] = state?.placeholderExpression;
            resourceInputs["required"] = state?.required;
            resourceInputs["stagePromptFieldId"] = state?.stagePromptFieldId;
            resourceInputs["subText"] = state?.subText;
            resourceInputs["type"] = state?.type;
        }
        else {
            const args = argsOrState;
            if (args?.fieldKey === undefined && !opts.urn) {
                throw new Error("Missing required property 'fieldKey'");
            }
            if (args?.label === undefined && !opts.urn) {
                throw new Error("Missing required property 'label'");
            }
            if (args?.type === undefined && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["fieldKey"] = args?.fieldKey;
            resourceInputs["initialValue"] = args?.initialValue;
            resourceInputs["initialValueExpression"] = args?.initialValueExpression;
            resourceInputs["label"] = args?.label;
            resourceInputs["name"] = args?.name;
            resourceInputs["order"] = args?.order;
            resourceInputs["placeholder"] = args?.placeholder;
            resourceInputs["placeholderExpression"] = args?.placeholderExpression;
            resourceInputs["required"] = args?.required;
            resourceInputs["stagePromptFieldId"] = args?.stagePromptFieldId;
            resourceInputs["subText"] = args?.subText;
            resourceInputs["type"] = args?.type;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StagePromptField.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.StagePromptField = StagePromptField;
/** @internal */
StagePromptField.__pulumiType = 'authentik:index/stagePromptField:StagePromptField';
//# sourceMappingURL=stagePromptField.js.map