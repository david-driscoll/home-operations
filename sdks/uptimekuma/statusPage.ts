// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class StatusPage extends pulumi.CustomResource {
    /**
     * Get an existing StatusPage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StatusPageState, opts?: pulumi.CustomResourceOptions): StatusPage {
        return new StatusPage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'uptimekuma:index/statusPage:StatusPage';

    /**
     * Returns true if the given object is an instance of StatusPage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StatusPage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StatusPage.__pulumiType;
    }

    /**
     * Custom CSS for the status page
     */
    declare public readonly customCss: pulumi.Output<string | undefined>;
    /**
     * Status page description
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * List of custom domain names for the status page
     */
    declare public readonly domainNameLists: pulumi.Output<string[] | undefined>;
    /**
     * Custom footer text
     */
    declare public readonly footerText: pulumi.Output<string | undefined>;
    /**
     * Google Analytics ID
     */
    declare public readonly googleAnalyticsId: pulumi.Output<string | undefined>;
    /**
     * Status page icon
     */
    declare public readonly icon: pulumi.Output<string | undefined>;
    /**
     * List of monitor groups displayed on the status page
     */
    declare public readonly publicGroupLists: pulumi.Output<outputs.StatusPagePublicGroupList[] | undefined>;
    /**
     * Whether the status page is published
     */
    declare public readonly published: pulumi.Output<boolean>;
    /**
     * Whether to show 'Powered by Uptime Kuma' text
     */
    declare public readonly showPoweredBy: pulumi.Output<boolean>;
    /**
     * Whether to show tags on the status page
     */
    declare public readonly showTags: pulumi.Output<boolean>;
    /**
     * Status page URL slug
     */
    declare public readonly slug: pulumi.Output<string>;
    /**
     * Status page identifier
     */
    declare public /*out*/ readonly statusPageId: pulumi.Output<number>;
    /**
     * Status page theme
     */
    declare public readonly theme: pulumi.Output<string | undefined>;
    /**
     * Status page title
     */
    declare public readonly title: pulumi.Output<string>;

    /**
     * Create a StatusPage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StatusPageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StatusPageArgs | StatusPageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StatusPageState | undefined;
            resourceInputs["customCss"] = state?.customCss;
            resourceInputs["description"] = state?.description;
            resourceInputs["domainNameLists"] = state?.domainNameLists;
            resourceInputs["footerText"] = state?.footerText;
            resourceInputs["googleAnalyticsId"] = state?.googleAnalyticsId;
            resourceInputs["icon"] = state?.icon;
            resourceInputs["publicGroupLists"] = state?.publicGroupLists;
            resourceInputs["published"] = state?.published;
            resourceInputs["showPoweredBy"] = state?.showPoweredBy;
            resourceInputs["showTags"] = state?.showTags;
            resourceInputs["slug"] = state?.slug;
            resourceInputs["statusPageId"] = state?.statusPageId;
            resourceInputs["theme"] = state?.theme;
            resourceInputs["title"] = state?.title;
        } else {
            const args = argsOrState as StatusPageArgs | undefined;
            if (args?.slug === undefined && !opts.urn) {
                throw new Error("Missing required property 'slug'");
            }
            if (args?.title === undefined && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            resourceInputs["customCss"] = args?.customCss;
            resourceInputs["description"] = args?.description;
            resourceInputs["domainNameLists"] = args?.domainNameLists;
            resourceInputs["footerText"] = args?.footerText;
            resourceInputs["googleAnalyticsId"] = args?.googleAnalyticsId;
            resourceInputs["icon"] = args?.icon;
            resourceInputs["publicGroupLists"] = args?.publicGroupLists;
            resourceInputs["published"] = args?.published;
            resourceInputs["showPoweredBy"] = args?.showPoweredBy;
            resourceInputs["showTags"] = args?.showTags;
            resourceInputs["slug"] = args?.slug;
            resourceInputs["theme"] = args?.theme;
            resourceInputs["title"] = args?.title;
            resourceInputs["statusPageId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StatusPage.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering StatusPage resources.
 */
export interface StatusPageState {
    /**
     * Custom CSS for the status page
     */
    customCss?: pulumi.Input<string>;
    /**
     * Status page description
     */
    description?: pulumi.Input<string>;
    /**
     * List of custom domain names for the status page
     */
    domainNameLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Custom footer text
     */
    footerText?: pulumi.Input<string>;
    /**
     * Google Analytics ID
     */
    googleAnalyticsId?: pulumi.Input<string>;
    /**
     * Status page icon
     */
    icon?: pulumi.Input<string>;
    /**
     * List of monitor groups displayed on the status page
     */
    publicGroupLists?: pulumi.Input<pulumi.Input<inputs.StatusPagePublicGroupList>[]>;
    /**
     * Whether the status page is published
     */
    published?: pulumi.Input<boolean>;
    /**
     * Whether to show 'Powered by Uptime Kuma' text
     */
    showPoweredBy?: pulumi.Input<boolean>;
    /**
     * Whether to show tags on the status page
     */
    showTags?: pulumi.Input<boolean>;
    /**
     * Status page URL slug
     */
    slug?: pulumi.Input<string>;
    /**
     * Status page identifier
     */
    statusPageId?: pulumi.Input<number>;
    /**
     * Status page theme
     */
    theme?: pulumi.Input<string>;
    /**
     * Status page title
     */
    title?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StatusPage resource.
 */
export interface StatusPageArgs {
    /**
     * Custom CSS for the status page
     */
    customCss?: pulumi.Input<string>;
    /**
     * Status page description
     */
    description?: pulumi.Input<string>;
    /**
     * List of custom domain names for the status page
     */
    domainNameLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Custom footer text
     */
    footerText?: pulumi.Input<string>;
    /**
     * Google Analytics ID
     */
    googleAnalyticsId?: pulumi.Input<string>;
    /**
     * Status page icon
     */
    icon?: pulumi.Input<string>;
    /**
     * List of monitor groups displayed on the status page
     */
    publicGroupLists?: pulumi.Input<pulumi.Input<inputs.StatusPagePublicGroupList>[]>;
    /**
     * Whether the status page is published
     */
    published?: pulumi.Input<boolean>;
    /**
     * Whether to show 'Powered by Uptime Kuma' text
     */
    showPoweredBy?: pulumi.Input<boolean>;
    /**
     * Whether to show tags on the status page
     */
    showTags?: pulumi.Input<boolean>;
    /**
     * Status page URL slug
     */
    slug: pulumi.Input<string>;
    /**
     * Status page theme
     */
    theme?: pulumi.Input<string>;
    /**
     * Status page title
     */
    title: pulumi.Input<string>;
}
