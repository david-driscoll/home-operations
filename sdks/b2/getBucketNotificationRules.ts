// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBucketNotificationRules(args: GetBucketNotificationRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetBucketNotificationRulesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("b2:index/getBucketNotificationRules:getBucketNotificationRules", {
        "bucketId": args.bucketId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBucketNotificationRules.
 */
export interface GetBucketNotificationRulesArgs {
    bucketId: string;
    id?: string;
}

/**
 * A collection of values returned by getBucketNotificationRules.
 */
export interface GetBucketNotificationRulesResult {
    readonly bucketId: string;
    readonly id: string;
    readonly notificationRules: outputs.GetBucketNotificationRulesNotificationRule[];
}
export function getBucketNotificationRulesOutput(args: GetBucketNotificationRulesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetBucketNotificationRulesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("b2:index/getBucketNotificationRules:getBucketNotificationRules", {
        "bucketId": args.bucketId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBucketNotificationRules.
 */
export interface GetBucketNotificationRulesOutputArgs {
    bucketId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
