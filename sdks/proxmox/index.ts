// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { LxcArgs, LxcState } from "./lxc";
export type Lxc = import("./lxc").Lxc;
export const Lxc: typeof import("./lxc").Lxc = null as any;
utilities.lazyLoad(exports, ["Lxc"], () => require("./lxc"));

export { LxcDiskArgs, LxcDiskState } from "./lxcDisk";
export type LxcDisk = import("./lxcDisk").LxcDisk;
export const LxcDisk: typeof import("./lxcDisk").LxcDisk = null as any;
utilities.lazyLoad(exports, ["LxcDisk"], () => require("./lxcDisk"));

export { PoolArgs, PoolState } from "./pool";
export type Pool = import("./pool").Pool;
export const Pool: typeof import("./pool").Pool = null as any;
utilities.lazyLoad(exports, ["Pool"], () => require("./pool"));

export * from "./provider";
import { Provider } from "./provider";

export { VmQemuArgs, VmQemuState } from "./vmQemu";
export type VmQemu = import("./vmQemu").VmQemu;
export const VmQemu: typeof import("./vmQemu").VmQemu = null as any;
utilities.lazyLoad(exports, ["VmQemu"], () => require("./vmQemu"));


// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "proxmox:index/lxc:Lxc":
                return new Lxc(name, <any>undefined, { urn })
            case "proxmox:index/lxcDisk:LxcDisk":
                return new LxcDisk(name, <any>undefined, { urn })
            case "proxmox:index/pool:Pool":
                return new Pool(name, <any>undefined, { urn })
            case "proxmox:index/vmQemu:VmQemu":
                return new VmQemu(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("proxmox", "index/lxc", _module)
pulumi.runtime.registerResourceModule("proxmox", "index/lxcDisk", _module)
pulumi.runtime.registerResourceModule("proxmox", "index/pool", _module)
pulumi.runtime.registerResourceModule("proxmox", "index/vmQemu", _module)
pulumi.runtime.registerResourcePackage("proxmox", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:proxmox") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
